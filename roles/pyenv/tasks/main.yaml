---

# install pyenv

# install dependencies in debian
# obtained from https://github.com/pyenv/pyenv/wiki#suggested-build-environment
- name: "Install dependencies via apt"
  apt:
    update_cache: true
    name: "{{ item }}"
    state: present
  loop:
    - build-essential
    - curl
    - libbz2-dev
    - libffi-dev
    - liblzma-dev
    - libncursesw5-dev
    - libreadline-dev
    - libsqlite3-dev
    - libssl-dev
    - libxml2-dev
    - libxmlsec1-dev
    - tk-dev
    - xz-utils
    - zlib1g-dev
  when: ansible_os_family == "Debian"
  become: true

# install dependencies in macOS
# obtained from https://github.com/pyenv/pyenv/wiki#suggested-build-environment
- name: "Install dependencies via homebrew"
  homebrew:
    name: "{{ item }}"
    state: present
  loop:
    - openssl
    - readline
    - sqlite3
    - tcl-tk
    - xz
    - zlib
  when: ansible_os_family == "Darwin"
  become: true

# obtained from https://stackoverflow.com/a/35021607/3053548
- name: "Check if {{ zshenv.PYENV_DIR_PATH }} exists"
  stat:
    path: "{{ zshenv.PYENV_DIR_PATH }}"
  changed_when: false
  register: pyenv_dir_stats

- name: "Install pyenv"
  shell: curl https://pyenv.run | bash
  when: not pyenv_dir_stats.stat.exists

- name: "Update pyenv"
  shell: |
    command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH" ;
    eval "$(pyenv init -)" ;
    pyenv update
  when: pyenv_dir_stats.stat.exists

# obtained from https://stackoverflow.com/a/65943431/3053548
- name: "Get latest python version"
  shell: |
    command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH" ;
    eval "$(pyenv init -)" ;
    pyenv install --list | grep --extended-regexp "^\s*[0-9][0-9.]*[0-9]\s*$" | tail -1
  changed_when: false
  register: python_latest_version

- name: "Install python version {{ python_latest_version.stdout }}"
  shell: |
    command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH" ;
    eval "$(pyenv init -)" ;
    pyenv install --skip-existing {{ python_latest_version.stdout }}

- name: "Use latest python version"
  shell: |
    command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH" ;
    eval "$(pyenv init -)" ;
    pyenv global {{ python_latest_version.stdout }}
