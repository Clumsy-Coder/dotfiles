---
# get latest kitty release metadata
- name: "Download Latest Version JSON"
  ansible.builtin.uri:
    url: https://api.github.com/repos/kovidgoyal/kitty/releases/latest
  register: kitty_latest_version_json
  changed_when: false

- name: "Registering kitty Latest Release"
  ansible.builtin.set_fact:
    kitty_latest_release: "{{ kitty_latest_version_json.json.tag_name }}"

- name: "Registering kitty Latest Version"
  ansible.builtin.set_fact:
    kitty_latest_version: "{{ kitty_latest_release.stdout | default('') }}"

- name: Show kitty_latest_release debug
  ansible.builtin.debug:
    var: kitty_latest_release

# get installed kitty version
- name: "Check if kitty is installed"
  shell:
    cmd: command -v kitty > /dev/null 2>&1
  register: is_kitty_installed
  ignore_errors: true
  failed_when: false

- name: "Get installed version"
  # noqa risky-shell-pipe
  shell:
    cmd: |
      kitty --version | grep -Po "(\d+\.)+\d+" | xargs printf 'v%s'
  register: installed_kitty_version
  when: is_kitty_installed.rc == 0

- name: "Show installed_kitty_version"
  ansible.builtin.debug:
    var: installed_kitty_version.stdout

# ----------------------------------------------------------------------------------------------- #
# install using script
# - https://sw.kovidgoyal.net/kitty/binary/#binary-install
#
# add desktop integration
# - https://sw.kovidgoyal.net/kitty/binary/#desktop-integration-on-linux

- name: "Install kitty"
  when: kitty_latest_release not in installed_kitty_version.stdout|default('')
  block:
    - name: "Create directories"
      file:
        dest: "{{ item }}"
        state: directory
        recurse: true
      loop:
        - ~/.local/bin
        - ~/.local/share/applications

    - name: "Remove old files"
      file:
        name: "{{ item }}"
        state: absent
      loop:
        - ~/.local/kitty.app/
        - ~/.local/bin/kitty
        - ~/.local/bin/kitten
        - ~/.local/share/applications/kitty.desktop
        - ~/.local/share/applications/kitty-open.desktop

    - name: "Install Kitty terminal"
      shell:
        cmd: |
          set -o pipefail &&
          curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin launch=n
        executable: /bin/bash

    - name: "Create symbolic link for kitty terminal binaries"
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      loop:
        - src: ~/.local/kitty.app/bin/kitty
          dest: ~/.local/bin/kitty
        - src: ~/.local/kitty.app/bin/kitten
          dest: ~/.local/bin/kitten

    - name: "Link .desktop files"
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
        force: true
      loop:
        - src: ~/.local/kitty.app/share/applications/kitty.desktop
          dest: ~/.local/share/applications/kitty.desktop
        - src: ~/.local/kitty.app/share/applications/kitty-open.desktop
          dest: ~/.local/share/applications/kitty-open.desktop

    - name: "Update icons and exec in .desktop files"
      replace:
        path: "{{ item.0 }}"
        regexp: "{{ item.1.regexp }}"
        replace: "{{ item.1.line }}"
      loop: >
        {{
          lookup('cartesian',
            [
              "{{ ansible_env.HOME }}/.local/share/applications/kitty.desktop",
              "{{ ansible_env.HOME }}/.local/share/applications/kitty-open.desktop"
            ],
            [
              { 'regexp': '^Icon=kitty', 'line': 'Icon={{ ansible_env.HOME }}/.local/kitty.app/share/icons/hicolor/256x256/apps/kitty.png' },
              { 'regexp': 'Exec=kitty', 'line': 'Exec={{ ansible_env.HOME }}/.local/kitty.app/bin/kitty' }
            ]
          )
        }}

    - name: "Add kitty.desktop to supported terminal lists"
      ansible.builtin.copy:
        content: "kitty.desktop"
        dest: ~/.config/xdg-terminals.list

    - name: "Set kitty as default terminal"
      block:
        - name: "Store file of kitty terminal"
          command:
            cmd: which kitty
          register: kitty_filepath
          changed_when: false

        - name: "Print kitty_filepath"
          debug:
            var: kitty_filepath.stdout

        # obtained from
        # - https://www.park-dev.io/installing-alacritty-on-ubuntu#heading-step-6-set-alacritty-as-default-terminal
        - name: "Add kitty terminal to list of alternative terminals"
          command:
            cmd: update-alternatives --install /usr/bin/x-terminal-emulator x-terminal-emulator {{ kitty_filepath.stdout }} 50
          become: true

        - name: "Set kitty as default terminal"
          command:
            cmd: update-alternatives --set x-terminal-emulator {{ kitty_filepath.stdout }}
          become: true
