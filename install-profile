#!/usr/bin/env bash

# install-profile
# used for running group of installation scripts as a profile located in ./meta/profiles/ folder
# Ex: install script for MacOS, debian
# Usage:
# ./install-profile mac
# ./install-profile debian-terminal
#
# files in ./meta/profiles/ folder are plain text files that have config filename(no file extenstion).
# check example: https://github.com/ecarlson94/dotbot-template/blob/main/meta/profiles/exampleOS1
# Ex:
# ./meta/profiles/macos contains
# nvim
# tmux
# homebrew
#
# NOTE: to run a config in sudo, then add '-sudo' as a suffix of the config to run.
# Ex: ./meta/profiles/debian contains
# apt-sudo
#
# check example: https://github.com/ecarlson94/dotbot-template/blob/main/meta/profiles/exampleOS1
# check: https://github.com/ecarlson94/dotbot-template#for-installing-single-configurations
#
# obtained from https://github.com/anishathalye/dotbot/wiki/Tips-and-Tricks#install-profile
# author ecarlson94

set -e

META_DIR="meta"
CONFIG_DIR="configs"
PROFILES_DIR="profiles"

BASE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

cd "${BASE_DIR}"
git submodule update --init --recursive

# ------------------------------------------------------------------------------------------------ #
# Verify dotbot profile exists
# Checks if the file exists in meta/profiles/ folder

exitIfProfileNotFound=false    # used as a flag to exit IF a profile is NOT found
for profile in ${@}; do
  # check if the profile filepath doesn't exist
  #   print message
  #   flag variable to exit

  profileFilepath="${BASE_DIR}/${META_DIR}/${PROFILES_DIR}/${profile}"

  if [[ ! -e $profileFilepath ]]; then
    echo -e "Dotbot profile \\033[1;31m$profileFilepath \\033[0mNOT found"

    exitIfProfileNotFound=true
  fi
done

# exit if a profile filepath is NOT found
if [[ $exitIfProfileNotFound == true ]]; then
  echo -e "\nexiting"
  exit 1
fi

# cleanup variables
unset exitIfProfileNotFound

# ------------------------------------------------------------------------------------------------ #

# loop through each argument
#   extract dotbot configs to run
#   run dotbot configs using ./install-standalone
for profile in ${@}; do
  # extract dotbot configs to run
  while IFS= read -r config; do
    CONFIGS+=" ${config}"
  done < "${META_DIR}/${PROFILES_DIR}/$profile"

  # run dotbot configs
  source ./install-standalone ${CONFIGS}

  # cleanup variables
  unset CONFIGS
done

cd "${BASE_DIR}"